"use strict";angular.module("tantalim.desktop",["tantalim.common","ngRoute","ui.bootstrap","ngSanitize","tantalim.select"]),angular.module("tantalim.desktop").directive("focusMe",function(a){return{scope:{trigger:"=focusMe"},link:function(b,c){b.$watch("trigger",function(b){b===!0&&a(function(){c[0].focus(),c[0].select()})})}}}),angular.module("tantalim.desktop").factory("keyboardManager",["$window","$timeout",function(a,b){var c={},d={type:"keydown",propagate:!1,inputDisabled:!1,target:a.document,keyCode:!1};return c.keyboardEvent={},c.bind=function(e,f,g){var h,i,j,k;g=angular.extend({},d,g),e=e.toLowerCase(),i=g.target,"string"==typeof g.target&&(i=document.getElementById(g.target)),h=function(c){if(c=c||a.event,g.inputDisabled){var d;if(c.target?d=c.target:c.srcElement&&(d=c.srcElement),3===d.nodeType&&(d=d.parentNode),"INPUT"===d.tagName||"TEXTAREA"===d.tagName)return}c.keyCode?j=c.keyCode:c.which&&(j=c.which);var h=String.fromCharCode(j).toLowerCase();188===j&&(h=","),190===j&&(h=".");for(var i=e.split("+"),l=0,m={"`":"~",1:"!",2:"@",3:"#",4:"$",5:"%",6:"^",7:"&",8:"*",9:"(",0:")","-":"_","=":"+",";":":","'":'"',",":"<",".":">","/":"?","\\":"|"},n={esc:27,escape:27,tab:9,space:32,"return":13,enter:13,backspace:8,scrolllock:145,scroll_lock:145,scroll:145,capslock:20,caps_lock:20,caps:20,numlock:144,num_lock:144,num:144,pause:19,"break":19,insert:45,home:36,"delete":46,end:35,pageup:33,page_up:33,pu:33,pagedown:34,page_down:34,pd:34,left:37,up:38,right:39,down:40,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123},o={shift:{wanted:!1,pressed:c.shiftKey?!0:!1},ctrl:{wanted:!1,pressed:c.ctrlKey?!0:!1},alt:{wanted:!1,pressed:c.altKey?!0:!1},meta:{wanted:!1,pressed:c.metaKey?!0:!1}},p=0,q=i.length;k=i[p],q>p;p++){switch(k){case"ctrl":case"control":l++,o.ctrl.wanted=!0;break;case"shift":case"alt":case"meta":l++,o[k].wanted=!0}k.length>1?n[k]===j&&l++:g.keyCode?g.keyCode===j&&l++:h===k?l++:m[h]&&c.shiftKey&&(h=m[h],h===k&&l++)}return l!==i.length||o.ctrl.pressed!==o.ctrl.wanted||o.shift.pressed!==o.shift.wanted||o.alt.pressed!==o.alt.wanted||o.meta.pressed!==o.meta.wanted||(b(function(){f(c)},1),g.propagate)?void 0:(c.cancelBubble=!0,c.returnValue=!1,c.stopPropagation&&(c.stopPropagation(),c.preventDefault()),!1)},c.keyboardEvent[e]={callback:h,target:i,event:g.type},i.addEventListener?i.addEventListener(g.type,h,!1):i.attachEvent?i.attachEvent("on"+g.type,h):i["on"+g.type]=h},c.unbind=function(a){a=a.toLowerCase();var b=c.keyboardEvent[a];if(delete c.keyboardEvent[a],b){var d=b.event,e=b.target,f=b.callback;e.detachEvent?e.detachEvent("on"+d,f):e.removeEventListener?e.removeEventListener(d,f,!1):e["on"+d]=!1}},c}]),angular.module("tantalim.desktop").config(function(a,b){a.html5Mode(!0).hashPrefix("!"),b.debugEnabled(!0)}),angular.module("tantalim.desktop").controller("PageController",function(a,b,c,d,e,f,g,h,i,j){function k(){var a="/search",b={showSearch:void 0,initialize:function(){b.showSearch=c.path()===a},turnSearchOn:function(){c.path(a),b.showSearch=!0},turnSearchOff:function(){c.path("/"),b.showSearch=!1},filter:function(a){return a&&c.search("filter",a),c.search().filter},maxPages:99,page:function(a){return a&&c.search("page",a),parseInt(c.search().page||1)},previousPage:function(){var a=b.page();a>1&&b.page(a-1)},nextPage:function(){var a=b.page();a<b.maxPages&&b.page(a+1)}};return b}function l(){b.info("loadData()"),a.serverStatus="Loading data...",a.serverError="",e.readModelData(d.page.model.name,n.filter(),n.page()).then(function(b){return a.serverStatus="",200!==b.status?void(a.serverError="Failed to reach server. Try refreshing."):b.data.error?void(a.serverError="Error reading data from server: "+b.data.error.message):(a.filterString=n.filter(),a.pageNumber=n.page(),n.maxPages=b.data.maxPages,f.setRoot(d.page.model,b.data.rows),a.ModelCursor=f,a.current=f.current,a.action=f.action,n.turnSearchOff(),void(a.showLoadingScreen=!1))})}function m(){b.debug("initializePage()"),n.initialize(),n.showSearch?a.showLoadingScreen=!1:l()}a.showLoadingScreen=!0;var n=new k;a.searchController=n,h.initialize(d.page),a.PageCursor=h,a.chooseModel=function(b){a.currentModel=b},a.chooseModel(d.page.model.name),function(){i.bind("up",function(){a.currentModel&&a.action.previous(a.currentModel)}),i.bind("down",function(){a.currentModel&&a.action.next(a.currentModel)}),i.bind("ctrl+d",function(){a.currentModel&&a.action["delete"](a.currentModel)}),i.bind("ctrl+n",function(){a.currentModel&&a.action.insert(a.currentModel)}),i.bind("ctrl+s",function(){a.save()}),i.bind("meta+s",function(){a.save()}),i.bind("meta+c",function(){a.action.copy()}),i.bind("meta+v",function(){a.action.paste()}),i.bind("ctrl+shift+d",function(){console.log("DEBUGGING"),f.toConsole(),h.toConsole()})}(),function(){a.refresh=function(){return b.debug("refresh()"),f.dirty()&&!a.serverStatus?void(a.serverStatus="There are unsaved changes. Click [Refresh] again to discard those changes."):void l()},a.save=function(){a.serverStatus="Saving...",g.save(d.page.model,f.root,function(b){a.serverStatus="",a.serverError=b})}}(),function(){a.filterValues={},a.filterComparators={},angular.forEach(d.page.model.fields,function(b){a.filterComparators[b.name]="Contains"}),a.runSearch=function(){b.debug("runSearch()"),a.filterString?n.filter(a.filterString):c.search({}),l()},a.$watch("filterValues",function(b){e(b,a.filterComparators)},!0),a.$watch("filterComparators",function(b){e(a.filterValues,b)},!0);var e=function(b,c){var d="";angular.forEach(a.filterValues,function(a,b){a&&(d.length>0&&(d+=" AND "),d+=b+" "+c[b]+' "'+a+'"')}),a.filterString=d};a.filterString=""}(),a.link=function(a,b,c){var d=f.current.instances[c];_.forEach(d.data,function(a,c){b=b.replace("["+c+"]",d.data[c])}),j.location.href="/page/"+a+"/?filter="+b},a.$on("$locationChangeSuccess",function(){m()})}),angular.module("tantalim.desktop").factory("PageCursor",function(a){a.debug("Starting PageCursor");var b={current:null,sections:{},toConsole:function(){console.log("PageCursor.current",b.current),console.log("PageCursor.sections",b.sections)}},c=function(a){var d={name:a.name,viewMode:a.viewMode};b.sections[a.name]=d,_.forEach(a.children,function(a){new c(a)})};return b.initialize=function(b){a.debug("initializing PageCursor"),new c(b)},b}),angular.module("tantalim.common",[]),angular.module("tantalim.common").factory("Global",[function(){return{pageName:window.pageName,modelName:window.pageName,user:window.user,authenticated:!!window.user}}]),angular.module("tantalim.common").factory("GUID",function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}),angular.module("tantalim.common").factory("Logger",[function(){var a=[],b={Message:function(){return this},log:function(b){a.push(b)}};return b}]),angular.module("tantalim.common").factory("ModelCursor",["$filter","$log","GUID",function($filter,$log,GUID){function getRows(a,b){var c=a.rows.start,d=1+a.rows.end;b>d-c&&(d=c+b);var e=current.sets[a.model].rows;return _.slice(e,c,d)}var rootSet,current,modelMap,clipboard,clear=function(){rootSet=null,current={sets:{},instances:{},gridSelection:{},editing:{}},modelMap={},clipboard={}};clear();var MOUSE={LEFT:1,RIGHT:3},fillModelMap=function(a,b){modelMap[a.name]=a,a.parent=b,_.forEach(a.children,function(b){fillModelMap(b,a.name)})},resetCurrents=function(a,b){!b&&a&&(b=a.model.modelName);var c=modelMap[b];current.sets[b]=a;var d=null;if(a&&(d=a.getInstance()),current.instances[b]=d,c&&c.children){var e=function(a){return d&&d.childModels?d.childModels[a]:null};_.forEach(c.children,function(a){var b=a.name,c=e(b);resetCurrents(c,b)})}},SmartNodeInstance=function(model,row,nodeSet){function setFieldDefault(field,row){if(field.fieldDefault){$log.debug("Defaulting field ",field);var DEFAULT_TYPE={CONSTANT:"Constant",FIELD:"Field",FXN:"Fxn"};switch(field.fieldDefault.type){case DEFAULT_TYPE.FIELD:row.data[field.name]=row.getValue(field.fieldDefault.value);break;case DEFAULT_TYPE.FXN:row.data[field.name]=eval(field.fieldDefault.value);break;case DEFAULT_TYPE.CONSTANT:var value=field.fieldDefault.value;switch(field.dataType){case"Boolean":value="true"===value}row.data[field.name]=value;break;default:console.error("Failed to match fieldDefault.type on ",field)}$log.debug("defaulted "+field.name+" to "+row.data[field.name]+" of type "+typeof row.data[field.name])}}$log.debug("Adding SmartNodeInstance id:%s for model `%s` onto set ",row.id,model.name,nodeSet);var defaults={_type:"SmartNodeInstance",id:null,data:{},nodeSet:null,childModels:{},state:"NO_CHANGE","delete":function(){this.state="DELETED"},isDirty:function(){return"NO_CHANGE"!==this.state},toggle:function(a,b){var c=this.data[a],d=!0;c===!0&&(d=!1),void 0===c&&(d=!0),c===!1&&(d=b?!0:null),console.info("Setting ",a,d),this.update(a,d)},getValue:function(a){if(console.info("finding value for fieldName: ",a,this.data),this.data.hasOwnProperty(a))return this.data[a];if(this.nodeSet.parentInstance)return this.nodeSet.parentInstance.getValue(a);throw new Error("Cannot find field called "+a)},update:function(a,b){var c=modelMap[nodeSet.model.modelName].fields[a];c||console.error("Failed to find field named "+a+" in ",modelMap[nodeSet.model.modelName].fields),c.updateable&&(a&&("TableName"===a&&b&&(this.data.TableSQL="app_"+this.data[a].toLowerCase()),void 0!==b&&(this.data[a]=b)),("NO_CHANGE"===this.state||"CHILD_UPDATED"===this.state)&&(this.state="UPDATED",this.updateParent()))},updateParent:function(){if(this.nodeSet){console.info(this);var a=this.nodeSet.parentInstance;a&&"NO_CHANGE"===a.state&&(a.state="CHILD_UPDATED",a.updateParent())}}},newInstance=_.defaults(row,defaults);return newInstance.nodeSet=nodeSet,null===row.id&&($log.debug("id is null, so assume record is newly inserted",row),newInstance.state="INSERTED",newInstance.id=GUID(),_.forEach(model.fields,function(a){setFieldDefault(a,row)})),newInstance.addChildModel=function(a,b){var c=new SmartNodeSet(modelMap[a],b,newInstance);newInstance.childModels[a]=c},row.children&&_.forEach(model.children,function(a){newInstance.addChildModel(a.name,row.children[a.name])}),$log.debug("Done creating newInstance"),newInstance},SmartNodeSet=function(a,b,c){$log.debug("Adding SmartNodeSet for "+a.name);var d={_type:"SmartNodeSet",model:{modelName:null,parentInstance:null,orderBy:null,childModels:[]},parent:{instance:null,model:null},currentIndex:-1,rows:[],deleted:[],sort:function(a){var b=this.model.orderBy;angular.isString(b)&&(b="data."+b),this.rows=$filter("orderBy")(this.rows,b,a)},sortReverse:function(){this.sort(!0)},moveTo:function(a){0>a||a>=this.rows.length||(this.currentIndex=a,resetCurrents(this))},moveNext:function(){this.moveTo(this.currentIndex+1)},movePrevious:function(){this.moveTo(this.currentIndex-1)},moveToTop:function(){this.moveTo(0)},moveToBottom:function(){this.moveTo(this.rows.length-1)},findIndex:function(a){return _.findIndex(this.rows,function(b){return b.id===a})},isDirty:function(){if(this.deleted&&this.deleted.length>0)return!0;var a=_.find(this.rows,function(a){return a.isDirty()});return!_.isEmpty(a)},"delete":function(a){if(!(this.rows.length<=0)){var b=this.getInstance(a).id,c=_.remove(this.rows,function(a){return a.id===b});c=_.remove(c,function(a){return"INSERTED"!==a.state}),c&&c.length>0&&(c[0].updateParent(),this.deleted.push(c[0])),this.currentIndex>=this.rows.length&&(this.currentIndex=this.rows.length-1),resetCurrents(this)}},getInstance:function(a){return a||(a=this.currentIndex),(!a||0>a)&&(a=0),this.rows&&0!==this.rows.length?this.rows[a]:null},reloadFromServer:function(a){$log.debug("reloadFromServer"),$log.debug(a),$log.debug(this),_.forEach(this.rows,function(b){var c;switch(b.state){case"INSERTED":$log.debug(b),c=_.find(a,function(a){return a.tempID===b.id}),c?(b.state="NO_CHANGE",b.data=c.data,b.id=c.id):console.error("Failed to find matching inserted row",b);break;case"UPDATED":$log.debug(b),c=_.find(a,function(a){return a.id===b.id}),c?(b.state="NO_CHANGE",b.data=c.data):console.error("Failed to find matching updated row",b)}}),this.deleted.length=0}},e=_.defaults({},d);return e.model.modelName=a.name,e.model.orderBy=a.orderBy,e.parentInstance=c,e.insert=function(){$log.debug("Inserting new instance with model");var b=new SmartNodeInstance(a,{},e);return e.rows.push(b),e.moveToBottom(),b.updateParent(),b},angular.isArray(b)&&(_.forEach(b,function(b){var c=new SmartNodeInstance(a,b,e);e.rows.push(c)}),e.rows.length&&(e.currentIndex=0)),e},self={root:rootSet,current:current,setRoot:function(a,b){return $log.debug("Setting Root data"),clear(),_.isEmpty(a)?void console.warn("setRoot called with empty model, exiting"):(fillModelMap(a),rootSet=new SmartNodeSet(a,b),self.root=rootSet,resetCurrents(rootSet),void(self.current=current))},getCurrentInstance:function(a){return current.instances[a]},getCurrentSet:function(a){if(void 0===current.sets[a]){$log.debug("current set for %s hasn't been created yet, creating now.",a);var b=modelMap[a].parent,c=current.instances[b];c.addChildModel(a),resetCurrents(self.root)}return current.sets[a]},dirty:function(){return rootSet.isDirty()},toConsole:function(){console.log("ModelCursor.rootSet",self.root),console.log("ModelCursor.modelMap",modelMap),console.log("ModelCursor.current",self.current)},action:{length:function(a){return _.isEmpty(current.sets[a])?0:current.sets[a].rows.length},insert:function(a){var b=self.getCurrentSet(a).insert();return b},"delete":function(a,b){current.sets[a]["delete"](b)},deleteSelected:function(a){if(current.gridSelection.model===a){for(var b=current.gridSelection.rows.start;b<=current.gridSelection.rows.end;b++)current.sets[a]["delete"](current.gridSelection.rows.start);current.sets[a].rows.length>0?current.gridSelection.rows.end=current.gridSelection.rows.start:current.gridSelection={}}},deleteEnabled:function(a){return null!==current.instances[a]},choose:function(a,b){var c=current.sets[a].findIndex(b);current.sets[a].moveTo(c)},select:function(a,b){current.sets[a].moveTo(b)},previous:function(a){current.sets[a].movePrevious()},next:function(a){current.sets[a].moveNext()},dblclick:function(a,b,c){if(event.which===MOUSE.LEFT){var d=modelMap[a].fields[c],e=current.sets[a].getInstance(b);console.info(e),console.info(d),("INSERTED"===e.state||d.updateable)&&(current.editing={},current.editing[a]={row:b,column:c},current.focus=a+"_"+c+"_"+b)}},focus:function(a,b,c){return self.action.cellIsEditing(a,b,c)?current.focus===a+"_"+c+"_"+b:!1},cellIsEditing:function(a,b,c){return current.editing[a]&&current.editing[a].row===b&&current.editing[a].column===c},escape:function(){current.editing={}},mousedown:function(a,b,c){if(event.which===MOUSE.LEFT){if(self.action.cellIsEditing(a,b,c))return;current.editing={},current.gridSelection={selecting:!0,model:a,rows:{start:b,end:b},columns:{}},self.action.mouseover(a,b,c),self.action.select(a,b)}},mouseover:function(a,b,c){if(event.which===MOUSE.LEFT){if(self.action.cellIsEditing(a,b,c))return;current.gridSelection.selecting&&(a===current.gridSelection.model&&(current.gridSelection.rows.end=b,current.gridSelection.columns[c]=!0),event.preventDefault(),event.stopPropagation())}},mouseup:function(){event.which===MOUSE.LEFT&&(current.gridSelection.selecting=!1)},cellIsSelected:function(a,b,c){return current.gridSelection.model===a&&current.gridSelection.rows.start<=b&&current.gridSelection.rows.end>=b&&current.gridSelection.columns[c]},copy:function(){current.gridSelection&&(clipboard=_.cloneDeep(current.gridSelection))},paste:function(){if(clipboard&&current.gridSelection){var a=getRows(clipboard),b=getRows(current.gridSelection),c=0;_.forEach(b,function(b){c>=a.length&&(c=0);var d=a[c];_.forEach(current.gridSelection.columns,function(a,c){b.update(c,d.data[c])}),c++})}}}};return self}]),angular.module("tantalim.common").factory("ModelSaver",["$http","$log",function(a,b){var c,d={convertToDto:function(a,c){var e=(a.name,function(a){return{state:a.state,tempID:a.id,data:a.data}}),f=function(a){return{state:a.state,id:a.id,data:a.data}},g=function(a){return{state:"DELETED",id:a.id}},h=function(a,b,c){var e=!1;a.children={},_.forEach(b.children,function(b){var f=b.name,g=d.convertToDto(b,c.childModels[f]);g.length>0&&(a.children[f]=g,e=!0)}),e||delete a.children},i=[];return c?(b.debug(c),_.forEach(c.rows,function(b){var c={};c="INSERTED"===b.state?e(b):"UPDATED"===b.state?f(b):"CHILD_UPDATED"===b.state?f(b):null,c&&(i.push(c),h(c,a,b))}),_.forEach(c.deleted,function(b){var c=g(b);i.push(c),h(c,a,b)}),i):(b.debug("dataSet is empty so exit"),i)},sendData:function(d,e,f){b.debug("sendData()..."),b.debug(e),a.post("/data/"+d,e).success(function(a,d){b.debug("Returned success"),b.debug(d),200===d?a.error?f("Failed to save data "+a.error.message):(c.reloadFromServer(a),f("")):(f("Failed "+d),console.error(d),console.error(a))}).error(function(a,b){f(404===b?"Server not found. Check your Internet connection and try again.":"Server returned an unknown "+b+" error")})},save:function(a,e,f){c=e,b.debug("Starting ModelSaver.save");var g=d.convertToDto(a,c);d.sendData(a.name,g,f)}};return d}]),angular.module("tantalim.common").factory("PageService",function(a){return{readModelData:function(b,c,d){var e="/data/"+b+"?";return c&&(e+="filter="+c),d&&(c&&(e+="&"),e+="page="+d),a.get(e)}}});