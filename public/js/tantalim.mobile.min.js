"use strict";angular.module("tantalim.mobile",["tantalim.common","ngRoute","mobile-angular-ui"]),angular.module("tantalim.mobile").config(["$routeProvider",function(a){var b=window.pageName;a.when("/",{templateUrl:"/m/"+b+"/list",controller:"PageController"}).when("/detail/:subPage/:id",{templateUrl:"/m/"+b+"/detail",controller:"PageController"}).when("/list/:subPage",{templateUrl:"/m/"+b+"/list",controller:"PageController"}).otherwise({redirectTo:"/"})}]),angular.module("tantalim.mobile").controller("PageController",function(a,b,c,d,e,f,g){function h(){a.ModelCursor=e,a.current=e.current,a.action=e.action}return a.loading=!0,d.error?(a.serverStatus="",void(a.serverError=d.error)):(c.pageLoaded?(h(),a.loading=!1,a.serverStatus=""):(c.pageLoaded=!0,a.serverStatus="Loading...",a.serverError="",g.readModelData(d.page.modelName).then(function(b){return a.serverStatus="",a.loading=!1,200!==b.status?void(a.serverError="Failed to reach server. Try refreshing."):b.data.error?void(a.serverError="Error reading data from server: "+b.data.error):(e.setRoot(d.model,b.data),void h())})),a.staticContent=d.staticContent,a.currentModel=d.currentModel,c.modelName=a.currentModel,a.currentPage="list-"+d.page.id,b.subPage&&(b.id?(a.currentPage="detail-"+b.subPage,e.action.choose(b.subPage,b.id)):a.currentPage="list-"+b.subPage),a.isActive=function(a){return a===c.pageName},a.rowChanged=function(a){e.change(a)},void(a.save=function(){a.serverStatus="Saving...",f.save(d.model,e.root,function(b){a.serverStatus=b,b||(e.dirty=!1)})}))}),angular.module("tantalim.common",[]),angular.module("tantalim.common").factory("Global",[function(){return{pageName:window.pageName,modelName:window.pageName,user:window.user,authenticated:!!window.user}}]),angular.module("tantalim.common").factory("GUID",function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}),angular.module("tantalim.common").factory("Logger",[function(){function a(a){return"string"==typeof a?{message:a}:a}var b={TYPE:{INFO:"info",WARN:"warn",ERROR:"warn",DEBUG:"debug"},history:[],log:function(c,d){c=a(c),c.type=d||b.TYPE.INFO,c.type===b.TYPE.ERROR?b._error=c.message:b._status=c.message,b.history.push(c)},info:function(a){b.log(a)},warn:function(a){b.log(a,b.TYPE.WARN)},debug:function(a){b.log(a,b.TYPE.DEBUG)},error:function(a){b.log(a,b.TYPE.ERROR)},getStatus:function(){return b._status},getError:function(){return b._error}};return b}]),angular.module("tantalim.common").factory("ModelCursor",["$filter","$log","GUID",function($filter,$log,GUID){var rootSet,current,modelMap,editCell,clear=function(){rootSet=null,current=[],modelMap={},editCell={}};clear();var MOUSE={LEFT:1,RIGHT:3},fillModelMap=function(a,b){modelMap[a.name]=a,a.parent=b,_.forEach(a.children,function(b){fillModelMap(b,a.name)})},resetCurrents=function(a){if(!a||"SmartNodeSet"!==a._type)throw new Error("resetCurrents() requires a SmartNodeSet but got",a);var b=a.model.modelName,c=0;current[c]||(current[c]={});var d=modelMap[b];current[c][b]=a;for(var e=c+1;e<current.length;e++)delete current[e];var f=a.getInstance();d&&d.children&&_.forEach(d.children,function(a){if(f&&f.childModels){var b=f.childModels[a.name];b&&resetCurrents(b)}})},SmartNodeInstance=function(model,row,nodeSet){function setFieldDefault(field,row){if(field.fieldDefault){$log.debug("Defaulting field ",field);var DEFAULT_TYPE={CONSTANT:"Constant",FIELD:"Field",FXN:"Fxn"};switch(field.fieldDefault.type){case DEFAULT_TYPE.FIELD:row.data[field.name]=row.getValue(field.fieldDefault.value);break;case DEFAULT_TYPE.FXN:row.data[field.name]=eval(field.fieldDefault.value);break;case DEFAULT_TYPE.CONSTANT:var value=field.fieldDefault.value;switch(field.dataType){case"Boolean":value="true"===value}row.data[field.name]=value;break;default:console.error("Failed to match fieldDefault.type on ",field)}$log.debug("defaulted "+field.name+" to "+row.data[field.name]+" of type "+typeof row.data[field.name])}}var defaults={_type:"SmartNodeInstance",id:null,data:{},nodeSet:null,childModels:{},state:"NO_CHANGE","delete":function(){this.state="DELETED"},isDirty:function(){return"NO_CHANGE"!==this.state},toggle:function(a,b){var c=this.data[a],d=!0;c===!0&&(d=!1),void 0===c&&(d=!0),c===!1&&(d=b?!0:null),console.info("Setting ",a,d),this.update(a,d)},getValue:function(a){if(console.info("finding value for fieldName: ",a,this.data),this.data.hasOwnProperty(a))return this.data[a];if(this.nodeSet.parentInstance)return this.nodeSet.parentInstance.getValue(a);throw new Error("Cannot find field called "+a)},update:function(a,b){var c=modelMap[nodeSet.model.modelName].fields[a];c||console.error("Failed to find field named "+a+" in ",modelMap[nodeSet.model.modelName].fields),c.updateable&&(a&&("TableName"===a&&b&&(this.data.TableSQL="app_"+this.data[a].toLowerCase()),void 0!==b&&(this.data[a]=b)),("NO_CHANGE"===this.state||"CHILD_UPDATED"===this.state)&&(this.state="UPDATED",this.updateParent()))},updateParent:function(){if(this.nodeSet){var a=this.nodeSet.parentInstance;a&&"NO_CHANGE"===a.state&&(a.state="CHILD_UPDATED",a.updateParent())}}},newInstance=_.defaults(row,defaults);return newInstance.nodeSet=nodeSet,null===row.id&&($log.debug("id is null, so assume record is newly inserted",row),newInstance.state="INSERTED",newInstance.id=GUID(),_.forEach(model.fields,function(a){setFieldDefault(a,row)})),newInstance.addChildModel=function(a,b){var c=new SmartNodeSet(modelMap[a],b,newInstance,nodeSet.depth+1);newInstance.childModels[a]=c},row.children&&_.forEach(model.children,function(a){newInstance.addChildModel(a.name,row.children[a.name])}),newInstance},SmartNodeSet=function(a,b,c,d){var e={_type:"SmartNodeSet",model:{modelName:null,parentInstance:null,orderBy:null,childModels:[]},parent:{instance:null,model:null},selectedRows:{},selectedColumns:{},rows:[],deleted:[],depth:d||0,sort:function(a){var b=this.model.orderBy;angular.isString(b)&&(b="data."+b),this.rows=$filter("orderBy")(this.rows,b,a)},sortReverse:function(){this.sort(!0)},moveTo:function(a){0>a||a>=this.rows.length||(this.selectedRows.start=a,this.selectedRows.end=a,resetCurrents(this))},moveNext:function(){this.moveTo(this.selectedRows.start+1)},movePrevious:function(){this.moveTo(this.selectedRows.start-1)},moveToBottom:function(){this.moveTo(this.rows.length-1)},selectUp:function(){this.selectedRows.end--},selectDown:function(){this.selectedRows.end++},mousedown:function(a,b){if(event.which===MOUSE.LEFT){if(this.cellIsEditing(a,b))return;editCell={},this.selectedRows={selecting:!0,start:a,end:a},this.selectedColumns={},this.mouseover(a,b)}},mouseover:function(a,b){if(event.which===MOUSE.LEFT){if(this.cellIsEditing(a,b))return;this.selectedRows.selecting&&(this.selectedRows.end=a,this.selectedColumns[b]=!0,event.preventDefault(),event.stopPropagation())}},mouseup:function(){event.which===MOUSE.LEFT&&(this.selectedRows.selecting=!1,this.fixSelectedRows())},dblclick:function(a,b){if(event.which===MOUSE.LEFT){var c=modelMap[this.model.modelName].fields[b],d=this.getInstance(a);("INSERTED"===d.state||c.updateable)&&(editCell={model:this.model.modelName,level:this.depth,row:a,column:b})}},cellIsSelected:function(a,b){var c=this.selectedRows.start,d=this.selectedRows.end;return c>d&&(c=d,d=this.selectedRows.start),a>=c&&d>=a&&this.selectedColumns[b]},cellIsEditing:function(a,b){return editCell.model===this.model.modelName&&editCell.level===this.depth&&this.selectedRows.start===a&&editCell.column===b},focus:function(a,b){return this.cellIsEditing(a,b)?!0:!1},findIndex:function(a){return _.findIndex(this.rows,function(b){return b.id===a})},fixSelectedRows:function(){function a(a,b,c){return void 0===a?b:b>a?b:a>c?c:a}if(0===this.rows.length)this.selectedRows={start:-1,end:-1};else{var b=this.rows.length-1;if(this.selectedRows.start=a(this.selectedRows.start,0,b),this.selectedRows.end=a(this.selectedRows.end,0,b),this.selectedRows.end<this.selectedRows.start){var c=this.selectedRows.end;this.selectedRows.end=this.selectedRows.start,this.selectedRows.start=c}}resetCurrents(this)},isDirty:function(){if(this.deleted&&this.deleted.length>0)return!0;var a=_.find(this.rows,function(a){return a.isDirty()});return!_.isEmpty(a)},"delete":function(){if(!(this.rows.length<=0)){for(var a=this.selectedRows.start;a<=this.selectedRows.end;a++){var b=this.rows[a];"INSERTED"!==b.state&&(this.deleted.push(b),b.updateParent())}this.rows.splice(this.selectedRows.start,1+this.selectedRows.end-this.selectedRows.start),this.fixSelectedRows()}},deleteEnabled:function(){return null!==this.getInstance()},getInstance:function(a){return this.rows&&0!==this.rows.length?(a||(a=this.selectedRows.start),(!a||0>a)&&(a=0),this.rows[a]):null},getSelectedRows:function(){return _.slice(this.rows,this.selectedRows.start,this.selectedRows.end)},reloadFromServer:function(a){$log.debug("reloadFromServer"),$log.debug(a),$log.debug(this),_.forEach(this.rows,function(b){var c;switch(b.state){case"INSERTED":$log.debug(b),c=_.find(a,function(a){return a.tempID===b.id}),c?(b.state="NO_CHANGE",b.data=c.data,b.id=c.id):console.error("Failed to find matching inserted row",b);break;case"UPDATED":$log.debug(b),c=_.find(a,function(a){return a.id===b.id}),c?(b.state="NO_CHANGE",b.data=c.data):console.error("Failed to find matching updated row",b)}}),this.deleted.length=0}},f=_.defaults({},e);return f.model.modelName=a.name,f.model.orderBy=a.orderBy,f.parentInstance=c,f.insert=function(){$log.debug("Inserting new instance with model");var b=new SmartNodeInstance(a,{},f);return f.rows.push(b),f.moveToBottom(),b.updateParent(),b},angular.isArray(b)&&(_.forEach(b,function(b){var c=new SmartNodeInstance(a,b,f);f.rows.push(c)}),f.fixSelectedRows()),f},self={root:rootSet,current:current,setRoot:function(a,b){return $log.debug("Setting Root data"),$log.debug(a),$log.debug(b),clear(),_.isEmpty(a)?void console.warn("setRoot called with empty model, exiting"):(fillModelMap(a),rootSet=new SmartNodeSet(a,b),self.root=rootSet,resetCurrents(rootSet),void(self.current=current))},getCurrentSet:function(a,b){b=b||0,b=0,current[b]||(current[b]={});var c=current[b];return void 0===c[a]&&modelMap[a]?void 0:c[a]},editCell:function(){return editCell},dirty:function(){return rootSet?rootSet.isDirty():!1},toConsole:function(){console.log("ModelCursor.rootSet",self.root),console.log("ModelCursor.modelMap",modelMap),console.log("ModelCursor.current",self.current)},action:{escape:function(){editCell={}}}};return self}]),angular.module("tantalim.common").factory("ModelSaver",["$http","$log",function(a,b){var c,d={convertToDto:function(a,c){var e=(a.name,function(a){return{state:a.state,tempID:a.id,data:a.data}}),f=function(a){return{state:a.state,id:a.id,data:a.data}},g=function(a){return{state:"DELETED",id:a.id}},h=function(a,b,c){var e=!1;a.children={},_.forEach(b.children,function(b){var f=b.name,g=d.convertToDto(b,c.childModels[f]);g.length>0&&(a.children[f]=g,e=!0)}),e||delete a.children},i=[];return c?(b.debug(c),_.forEach(c.rows,function(b){var c={};c="INSERTED"===b.state?e(b):"UPDATED"===b.state?f(b):"CHILD_UPDATED"===b.state?f(b):null,c&&(i.push(c),h(c,a,b))}),_.forEach(c.deleted,function(b){var c=g(b);i.push(c),h(c,a,b)}),i):(b.debug("dataSet is empty so exit"),i)},sendData:function(d,e,f){b.debug("sendData()..."),b.debug(e),a.post("/data/"+d,e).success(function(a,d){b.debug("Returned success"),b.debug(d),200===d?a.error?f("Failed to save data "+a.error.message):(c.reloadFromServer(a),f("")):(f("Failed "+d),console.error(d),console.error(a))}).error(function(a,b){f(404===b?"Server not found. Check your Internet connection and try again.":"Server returned an unknown "+b+" error")})},save:function(a,e,f){c=e,b.debug("Starting ModelSaver.save");var g=d.convertToDto(a,c);d.sendData(a.name,g,f)}};return d}]),angular.module("tantalim.common").factory("PageService",function(a){return{readModelData:function(b,c,d){var e="/data/"+b+"?";return c&&(e+="filter="+c),d&&(c&&(e+="&"),e+="page="+d),a.get(e)}}});