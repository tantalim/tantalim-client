"use strict";angular.module("tantalim.mobile",["tantalim.common","ngRoute","mobile-angular-ui"]),angular.module("tantalim.mobile").config(["$routeProvider",function(a){var b=window.pageName;a.when("/",{templateUrl:"/m/"+b+"/list",controller:"PageController"}).when("/detail/:subPage/:id",{templateUrl:"/m/"+b+"/detail",controller:"PageController"}).when("/list/:subPage",{templateUrl:"/m/"+b+"/list",controller:"PageController"}).otherwise({redirectTo:"/"})}]),angular.module("tantalim.mobile").controller("PageController",function(a,b,c,d,e,f,g){function h(){a.ModelCursor=e,a.current=e.current,a.action=e.action}return a.loading=!0,d.error?(a.serverStatus="",void(a.serverError=d.error)):(c.pageLoaded?(h(),a.loading=!1,a.serverStatus=""):(c.pageLoaded=!0,a.serverStatus="Loading...",a.serverError="",g.readModelData(d.page.modelName).then(function(b){return a.serverStatus="",a.loading=!1,200!==b.status?void(a.serverError="Failed to reach server. Try refreshing."):b.data.error?void(a.serverError="Error reading data from server: "+b.data.error):(e.setRoot(d.model,b.data),void h())})),a.staticContent=d.staticContent,a.currentModel=d.currentModel,c.modelName=a.currentModel,a.currentPage="list-"+d.page.id,b.subPage&&(b.id?(a.currentPage="detail-"+b.subPage,e.action.choose(b.subPage,b.id)):a.currentPage="list-"+b.subPage),a.isActive=function(a){return a===c.pageName},a.rowChanged=function(a){e.change(a)},void(a.save=function(){a.serverStatus="Saving...",f.save(d.model,e.root,function(b){a.serverStatus=b,b||(e.dirty=!1)})}))}),angular.module("tantalim.common",[]),angular.module("tantalim.common").factory("Global",[function(){return{pageName:window.pageName,modelName:window.pageName,user:window.user,authenticated:!!window.user}}]),angular.module("tantalim.common").factory("GUID",function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}),angular.module("tantalim.common").factory("Logger",[function(){var a=[],b={Message:function(){return this},log:function(b){a.push(b)}};return b}]),angular.module("tantalim.common").factory("ModelCursor",["$filter","$log","GUID",function($filter,$log,GUID){function markParentOfThisInstanceChanged(a){var b=a.nodeSet.parentInstance;b&&"NO_CHANGE"===b.state&&(b.state="CHILD_UPDATED",markParentOfThisInstanceChanged(b))}var rootSet,current,modelMap,clear=function(){rootSet=null,current={sets:{},instances:{}},modelMap={}};clear();var fillModelMap=function(a,b){var c=a.name;c?(modelMap[c]=a,a.parent=b,_.forEach(a.children,function(a){fillModelMap(a,c)})):console.warn("failed to fill modelMap for %s",a)},resetCurrents=function(a,b){!b&&a&&(b=a.model.modelName);var c=modelMap[b];current.sets[b]=a;var d=null;if(a&&(d=a.getInstance()),current.instances[b]=d,c&&c.children){var e=function(a){return d&&d.childModels?d.childModels[a]:null};_.forEach(c.children,function(a){var b=a.name,c=e(b);resetCurrents(c,b)})}},SmartNodeInstance=function(model,row,nodeSet){function getFieldValue(a,b){return b.nodeSet.parentInstance?b.nodeSet.parentInstance.data[a]?b.nodeSet.parentInstance.data[a]:getFieldValue(a,b.nodeSet.parentInstance):($log.error("Cannot find field called "+a),null)}function setFieldDefault(field,row){if(field.fieldDefault){var DEFAULT_TYPE={CONSTANT:"constant",FIELD:"field",FXN:"fxn"};switch(field.fieldDefault.type){case DEFAULT_TYPE.FIELD:row.data[field.name]=getFieldValue(field.fieldDefault.value,row);break;case DEFAULT_TYPE.FXN:row.data[field.name]=eval(field.fieldDefault.value);break;case DEFAULT_TYPE.CONSTANT:default:row.data[field.name]=field.fieldDefault.value}$log.debug("defaulted "+field.name+" to "+row.data[field.name])}}var defaults={_type:"SmartNodeInstance",id:null,data:{},nodeSet:null,childModels:{},state:"NO_CHANGE","delete":function(){this.state="DELETED"},update:function(){"NO_CHANGE"===this.state&&(this.state="UPDATED")}},newInstance=_.defaults(row,defaults);return newInstance.nodeSet=nodeSet,null===row.id?(newInstance.state="INSERTED",newInstance.id=GUID(),_.forEach(model.fields,function(a){setFieldDefault(a,row)}),newInstance):(newInstance.addChildModel=function(a,b){var c=a.name,d=new SmartNodeSet(a,b,newInstance);newInstance.childModels[c]=d},row.children&&_.forEach(model.children,function(a){var b=a.name;newInstance.addChildModel(a,row.children[b])}),newInstance)},SmartNodeSet=function(a,b,c){var d={_type:"SmartNodeSet",model:{modelName:null,parentInstance:null,orderBy:null,childModels:[]},parent:{instance:null,model:null},currentIndex:-1,rows:[],deleted:[],sort:function(a){var b=this.model.orderBy;angular.isString(b)&&(b="data."+b),this.rows=$filter("orderBy")(this.rows,b,a)},sortReverse:function(){this.sort(!0)},moveTo:function(a){0>a||a>=this.rows.length||(this.currentIndex=a,resetCurrents(this))},moveNext:function(){this.moveTo(this.currentIndex+1)},movePrevious:function(){this.moveTo(this.currentIndex-1)},moveToTop:function(){this.moveTo(0)},moveToBottom:function(){this.moveTo(this.rows.length-1)},findIndex:function(a){return _.findIndex(this.rows,function(b){return b.id==a})},"delete":function(a){if(!(this.rows.length<=0)){var b=this.getInstance(a).id,c=_.remove(this.rows,function(a){return a.id===b});c=_.remove(c,function(a){return"INSERTED"!==a.state}),c&&c.length>0&&(markParentOfThisInstanceChanged(c[0]),this.deleted.push(c[0])),this.currentIndex>=this.rows.length&&(this.currentIndex=this.rows.length-1),resetCurrents(this)}},getInstance:function(a){return a||(a=this.currentIndex),(!a||0>a)&&(a=0),this.rows&&0!==this.rows.length?this.rows[a]:null},reloadFromServer:function(a){$log.debug("reloadFromServer"),$log.debug(a),$log.debug(this),_.forEach(this.rows,function(b){var c;switch(b.state){case"INSERTED":$log.debug(b),c=_.find(a,function(a){return a.tempID===b.id}),c?(b.state="NO_CHANGE",b.data=c.data,b.id=c.id):console.error("Failed to find matching inserted row",b);break;case"UPDATED":$log.debug(b),c=_.find(a,function(a){return a.id===b.id}),c?(b.state="NO_CHANGE",b.data=c.data):console.error("Failed to find matching updated row",b)}}),this.deleted.length=0}},e=_.defaults({},d);return e.model.modelName=a.name,e.model.orderBy=a.orderBy,e.parentInstance=c,e.insert=function(){var b=new SmartNodeInstance(a,{},e);return e.rows.push(b),e.moveToBottom(),markParentOfThisInstanceChanged(b),b},angular.isArray(b)?(_.forEach(b,function(b){var c=new SmartNodeInstance(a,b,e);e.rows.push(c)}),e.rows.length&&(e.currentIndex=0)):(console.warn("SmartNodeSet expected data to be array but got the following:"),console.warn(b)),e},self={root:rootSet,current:current,setRoot:function(a,b){return clear(),_.isEmpty(a)?void console.warn("setRoot called with empty model, exiting"):(fillModelMap(a),rootSet=new SmartNodeSet(a,b),self.root=rootSet,resetCurrents(rootSet),self.current=current,void(self.dirty=!1))},getCurrentInstance:function(a){return current.instances[a]},getCurrentSet:function(a){if(void 0===current.sets[a]){var b=modelMap[a].parent,c=current.instances[b];c.addChildModel({data:{modelName:a}},[]),resetCurrents(self.root)}return current.sets[a]},dirty:!1,toConsole:function(){console.log("ModelCursor.rootSet",self.root),console.log("ModelCursor.modelMap",modelMap),console.log("ModelCursor.current",self.current)},change:function(a){console.info("changing",a),("NO_CHANGE"===a.state||"CHILD_UPDATED"===a.state)&&(self.dirty=!0,a.state="UPDATED",markParentOfThisInstanceChanged(a))},action:{length:function(a){return _.isEmpty(current.sets[a])?0:current.sets[a].rows.length},insert:function(a){var b=self.getCurrentSet(a).insert();return self.dirty=!0,b},"delete":function(a,b){current.sets[a]["delete"](b),self.dirty=!0},deleteEnabled:function(a){return null!=current.instances[a]},choose:function(a,b){var c=current.sets[a].findIndex(b);current.sets[a].moveTo(c)},select:function(a,b){current.sets[a].moveTo(b)},previous:function(a){current.sets[a].movePrevious()},next:function(a){current.sets[a].moveNext()}}};return self}]),angular.module("tantalim.common").factory("ModelSaver",["$http","$log",function(a,b){var c,d={convertToDto:function(a,c){var e=(a.name,function(a){return{state:a.state,tempID:a.id,data:a.data}}),f=function(a){return{state:a.state,id:a.id,data:a.data}},g=function(a){return{state:"DELETED",id:a.id}},h=function(a,b,c){var e=!1;a.children={},_.forEach(b.children,function(b){var f=b.name,g=d.convertToDto(b,c.childModels[f]);g.length>0&&(a.children[f]=g,e=!0)}),e||delete a.children},i=[];return c?(b.debug(c),_.forEach(c.rows,function(b){var c={};c="INSERTED"===b.state?e(b):"UPDATED"===b.state?f(b):"CHILD_UPDATED"===b.state?f(b):null,c&&(i.push(c),h(c,a,b))}),_.forEach(c.deleted,function(b){var c=g(b);i.push(c),h(c,a,b)}),i):(b.debug("dataSet is empty so exit"),i)},sendData:function(d,e,f){b.debug("sendData()..."),b.debug(e),a.post("/data/"+d,e).success(function(a,b){200===b?a.error?f("Failed to save data "+a.error):(c.reloadFromServer(a),f()):(f("Failed "+b),console.error(b),console.error(a))}).error(function(a,b){404===b&&f("Server not found. Check your Internet connection and try again."),console.error(b),console.error(a)})},save:function(a,e,f){c=e,b.debug("Starting ModelSaver.save");var g=d.convertToDto(a,c);d.sendData(a.name,g,f)}};return d}]),angular.module("tantalim.common").factory("PageService",function(a){return{readModelData:function(b,c,d){var e="/data/"+b+"?";return c&&(e+="filterString="+c),d&&(c&&(e+="&"),e+="pageNumber="+d),a.get(e)}}});